// THIS FILE IS GENERATED
syntax = "proto3";
package bmapi.orders.order;


import "google/type/timeofday.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "google/protobuf/wrappers.proto";
import "common/arrayvalues.proto";

import "common/enums.generated.proto";
import "common/enumarrayvalues.generated.proto";

service OrderV2Service {
    // Creates a new order in Open status.
    rpc CreateOrder(CreateOrderRequestProto) returns (CreateOrderResponseProto) {}
    // Saves the given order. Must be Open or Complete.
    rpc SaveOrder(SaveOrderRequestProto) returns (SaveOrderResponseProto) {}
    // Gets a single Order.
    rpc GetOrder(GetOrderRequestProto) returns (GetOrderResponseProto) {}
    // Gets zero or more orders. Errors if any do not exist.
    rpc GetOrders(GetOrdersRequestProto) returns (GetOrdersResponseProto) {}
    // Gets full orders (header plus lines) by a given filter.
    rpc GetOrdersByFilter(GetOrdersByFilterRequestProto) returns (GetOrdersByFilterResponseProto) {}
    // Performs standard calculations and extractions for simple addition of items to an Order. Returns what the order would look like with standard (BrewMan UI behaviour) of adding the given items to an order. The order is NOT saved to the database with the evaluated lines.  It can be easily saved by sending to the SaveOrder Api method, or can be adjusted as desired before saving.
    rpc BuildOrderLines(BuildOrderLinesRequestProto) returns (BuildOrderLinesResponseProto) {}
}

// Service Messages 
message CreateOrderRequestProto {
    
    string tenant_id = 1;
    // Outlet which the order is for. Shown on docs. Used to determine which contact in accounts the order is sent to (if not invoiced to group). Outlet is required at order create and then Not editable.
    string outlet_id = 2;
    // Order Source. Assigned at order creation. Not editable. : 0 = None, 1 = BrewMan, 2 = WooCommerce, 3 = Shopify, 4 = Sellar
    bmapi.common.EnumOrderSource order_source = 3;
    // Reference of Order in External system. (OrderSource identifies which system the order was imported from eg WooCommerce / Shopify). Not editable.
    string external_reference = 4;
}

message CreateOrderResponseProto {
    
    OrderProto order = 1;
}

message SaveOrderRequestProto {
    
    string tenant_id = 1;
    
    OrderProto order = 2;
}

message SaveOrderResponseProto {
    
    OrderProto order = 1;
}

message GetOrderRequestProto {
    
    string tenant_id = 1;
    
    string order_id = 2;
}

message GetOrderResponseProto {
    
    OrderProto order = 1;
}

message GetOrdersRequestProto {
    
    string tenant_id = 1;
    
    repeated string order_ids = 2;
}

message GetOrdersResponseProto {
    
    repeated OrderProto orders = 1;
}

message GetOrdersByFilterRequestProto {
    
    string tenant_id = 1;
    
    OrderFilterProto filter = 2;
}

message GetOrdersByFilterResponseProto {
    
    FilteredOrdersResultProto results = 1;
}

message BuildOrderLinesRequestProto {
    
    string tenant_id = 1;
    
    OrderHeaderProto order_header = 2;
    
    repeated ProductQuantityProto items = 3;
}

message BuildOrderLinesResponseProto {
    
    OrderProto results = 1;
}


// Domain Messages
message OrderProto {
    string id = 1;
    OrderHeaderProto header = 2;
    repeated OrderLineProto lines = 3;
}
message OrderFilterProto {
    google.protobuf.Int32Value maximum_results = 2;
    google.protobuf.StringValue single_outlet_id = 8;
    google.protobuf.StringValue single_group_id = 10;

    // Minimum (inclusive) delivery date
    google.type.Date from_delivery_date = 12;

    // Maximum (inclusive) delivery date
    google.type.Date to_delivery_date = 14;

    // Minimum (inclusive) effective duty return date. (Usually DespatchDate but possibly overriden by DutyReturnDateOverride).
    google.type.Date from_duty_return_date = 16;

    // Maximum (inclusive) effective duty return date. (Usually DespatchDate but possibly overriden by DutyReturnDateOverride).
    google.type.Date to_duty_return_date = 18;

    // Minimum (inclusive) despatch date
    google.type.Date from_despatch_date = 20;

    // Maximum (inclusive) despatch date
    google.type.Date to_despatch_date = 22;
    bmapi.common.EnumOrderSourceArrayValue sources = 24;
    bmapi.common.EnumDistributionTypeArrayValue distribution_types = 29;
    bmapi.common.StringArrayValue limit_courier_ids_for_courier_orders = 31;
    bmapi.common.StringArrayValue external_references = 33;
    bmapi.common.StringArrayValue order_numbers = 35;
    bmapi.common.StringArrayValue invoice_numbers = 37;

    // If provided only matching statuses are returned
    bmapi.common.EnumOrderStatusArrayValue limit_statuses = 39;
    bmapi.common.StringArrayValue limit_order_header_ids = 41;
}
message FilteredOrdersResultProto {
    int32 matching_count = 1;
    repeated OrderProto orders = 2;
}
message OrderHeaderProto {
    int64 version = 1;
    string order_id = 2;

    // Collection Time. Just for user information.
    google.protobuf.StringValue collection_time_id = 4;

    // Courier. Defaults to Courier chosen for relevant Outlet. Required if distribution type is Courier.
    google.protobuf.StringValue courier_id = 6;

    // Credit Terms Description. Frozen at order entry so historic invoices can print original details. Copied from Outlets Credit terms at order creation and not editable.
    string credit_terms_description = 7;

    // Customer Reference. Displays on documents, sent to accounts packages.
    string customer_reference = 8;

    // Delivery Business Name. Displays on documents. Copies from Outlet by default.
    string delivery_address_business = 9;

    // Delivery Address Line 1. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address1 = 10;

    // Delivery Address Line 2. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address2 = 11;

    // Delivery Address Line 3. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address3 = 12;

    // Delivery Address Line 4. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address4 = 13;

    // Delivery Address Line 5 - County. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address5 = 14;

    // Delivery Address Line 6 - Country. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_address6 = 15;

    // Delivery Area. Displays in Delivery App. Copies from Outlet by default.
    google.protobuf.StringValue delivery_area_id = 17;

    // Date the order will be / was Delivered. Sent to accounts as the Invoice Date for the order.
    google.type.Date delivery_date = 18;

    // The email address to use for delivery issues and updates. Just for user information. Copies from Outlet by default.
    string delivery_email_address = 19;

    // User notes relating to dispatch of this order. Displays on documents. Copies from Outlet by default.
    string external_dispatch_notes = 20;

    // Delivery Post Code. Displays in delivery app and documents. Sent to accounts. Copies from Outlet by default.
    string delivery_postcode = 21;

    // Delivery Recipient Name. Just for user information. Copies from Outlet by default.
    string delivery_recipient = 22;

    // The phone number to use for delivery issues and updates. Just for user information. Copies from Outlet by default.
    string delivery_telephone_number = 23;

    // End of delivery window. Used for distribution planning and shown in delivery app. Copies from Outlet by default.
    google.type.TimeOfDay delivery_time_end = 25;

    // Start of delivery window. Used for distribution planning and shown in delivery app. Copies from Outlet by default.
    google.type.TimeOfDay delivery_time_start = 27;

    // Date the order was/will be despatched for delivery. This is also the date at which any duty liability for the order occurs.
    google.type.Date despatch_date = 28;

    // Distribution Type. Drives the manner of distribution, particularly type Delivery which is included in the distribution planning and delivery app. Copied from Outlet by default. : 0 = None, 1 = Delivery, 2 = Courier, 3 = Collection
    bmapi.common.EnumDistributionType distribution_type = 29;

    // Special Effective Duty Date for this order. Normally will be null, but can be set if the order is put on BrewMan after the natural duty return has been submitted.
    google.type.Date duty_return_date_override = 31;

    // Whether an invoice has been sent for this order. Just for user information. 
    bool invoice_sent = 32;

    // Invoice Business Name. Shown on docs. Copied from Outlet / Group by default.
    string invoice_address_business = 33;

    // Invoice Address Line 1. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address1 = 34;

    // Invoice Address Line 2. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address2 = 35;

    // Invoice Address Line 3. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address3 = 36;

    // Invoice Address Line 4. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address4 = 37;

    // Invoice Address Line 5 - County. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address5 = 38;

    // Invoice Address Line 6 - Country. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_address6 = 39;

    // The email address invoices will be sent to. Shown on docs. Used when invoices auto-emailed. Copied from Outlet by default.
    string invoice_email_address = 40;

    // Invoice Post Code. Shown on docs. Sent to accounts. Copied from Outlet / Group by default.
    string invoice_postcode = 41;

    // Invoice Recipient Name. Just for user information. Copied from Outlet / Group by default.
    string invoice_recipient = 42;

    // Our Reference. Just for user information.
    string our_reference = 43;

    // Outlet Rating of Outlet at Time of order. No current Function - Stored for potential future reporting. Captured from outlet at order creation. Not editable.
    string outlet_rating_id = 44;

    // Outlet Type of Outlet at Time of order. Stored for potential future reporting. Also used for GlCode resolution when lines added. Captured from outlet at order creation. Not editable.
    google.protobuf.StringValue outlet_type_id = 46;

    // Price List used for the order. Affects price calculations and discounts. Controls which products are allowed.
    string price_list_id = 47;

    // Retail Payment Method. Used for grouping retail orders when creating summaries to post to accounts. : 0 = None, 1 = DebitCreditCard, 2 = Other, 3 = Cash
    bmapi.common.EnumRetailPaymentMethod retail_payment_method = 48;

    // The Sales Area which the outlet was in at the time of the order. No current Function - Stored for potential future reporting. Captured from outlet at order creation. Not editable.
    google.protobuf.StringValue sales_area_id = 50;

    // The Sales Code which the outlet was in at the time of the order. No current Function - Stored for potential future reporting. Captured from outlet at order creation. Not editable.
    google.protobuf.StringValue sales_code_id = 52;

    // Sales Order Notes. Shown on docs. Sent to accounts.
    string sales_order_notes = 53;

    // Order Type. Determines the duty implication of the order. Affects weight allocated to lines (export/normal). Can be changed, but all Order Lines should be removed if StandardOrderType is changed. : 0 = FullPriceDutyPaid, 1 = PriceExcludingDutyDutySuspended, 2 = FullPriceDutyPaidElsewhere, 3 = ExportDutySuspended
    bmapi.common.EnumStandardOrder standard_order_type = 54;

    // Expected duration required for a delivery stop, in minutes. Used in distribution planning. Copied from Outlet by default.
    int32 stop_minutes = 55;

    // Tracking Reference. Just for user information.
    string tracking_reference = 56;

    // Vat Code Id applicable to the order. If this is zero-rated then it will be used for lines added to the order instead of the individual product's Vat Code Id. Copied from Outlet by default. 
    string vat_code_id = 57;
    OrderHeaderReadOnlyProto read_only = 58;

    // Private notes relating to dispatch of this order. Not displayed to customer. Copies from Outlet by default.
    string internal_dispatch_notes = 59;
}
message ProductQuantityProto {

    // Id of Stock Item, which should be a Product
    string stock_item_id = 1;
    double quantity = 2;
}
message OrderLineProto {
    string id = 1;
    string order_id = 2;

    // Product Name. Stored so invoice can be recreated. Can be edited (useful for eg Miscellaneous / Guest products). Defaults to name of product when line is added to order.
    string product_name = 3;

    // Quantity Ordered
    double quantity = 4;

    // Stock Location Id from which this line is despatched.
    string stock_location_id = 5;

    // Unit List Net Price. This is the base list price before any applicable discount. Captured from Price List when line is added to order, but can be edited.
    double unit_list_net_price = 6;

    // Populated with gross product list price from the price list. Used to ensure tax calculations round to the gross value correctly. Null if no rounding is necessary.
    google.protobuf.DoubleValue unit_list_gross_price_for_rounding = 8;

    // Unit of Measure Id. Captured from product when line is added to order. Not editable.
    string unit_of_measure_id = 9;

    // Product Abv. Used largely in duty calculations. Captured from product when adding line to order. Not editable.
    double abv = 10;

    // Alcohol Type. Used largely in duty calculations. Captured from product when adding line to order. Not editable.
    bmapi.common.EnumAlcoholType alcohol_type = 11;

    // General Ledger Code of Line. Sent to accounts (currently Xero only). Captured from Product (and possibly override for order OutletTypeId) when line is added to order. Not editable.
    string gl_code_id = 12;

    // Line Cost Price (Inc Duty, Exc Vat). Used for profit calculations. Calculated when line is added to order, or order lines are edited. Not editable.
    double line_cost_net_price = 13;

    // Net (no VAT) Price charged for the line. Not directly editable, calculated from other line properties (List Price, Discount)
    double line_net_price = 14;

    // Total VAT for the line. Not directly editable, calculated from other line properties (List Price, Discount)
    double line_vat = 15;

    // Manufacturer of the product. Can affect duty (particularly UK Beer Duty). Required if AlcoholType is not None. Copied from Product when line added to order. Not editable.
    google.protobuf.StringValue manufacturer_id = 17;

    // Product Brand at time of Order. No current functionality. Stored for potential future reporting. Captured from product when line is added to order. Not editable.
    google.protobuf.StringValue product_brand_id = 19;

    // Product Code at time of adding line to order. Captured so reprinted invoices etc show original code. Captured from product when line is added to order. Not editable.
    string product_code = 20;

    // Stock Item Id. Given when line is added to order. Not editable.
    string stock_item_id = 21;

    // Product Cost Price. Calculated when line is added to order, or order lines are edited. Not editable.
    double unit_cost_net_price = 23;

    // Product Dutiable Litres. Used largely in duty calculations. Captured from product when adding line to order. Not editable.
    double unit_dutiable_litres = 24;

    // Product Unit Litres. Affects liquid-volume based discounts. Captured from the package type of the product when line is added to order. Not editable.
    double unit_litres = 25;

    // Unit Net Price. Evaluated from other pricing information. Not editable.
    double unit_net_price = 26;

    // Product Unit Weight. Captured from product (Weight or ExportWeight as applicable) when line is added to order. Not editable.
    double unit_weight = 27;

    // Vat Percentage at time of order. Captured from product (overridden if order vat code is zero-rated) when line is added to order. Not editable.
    double vat_percentage = 28;

    // Vat Code Applicable to the line. Captured from product (overridden if order vat code is zero-rated) when line is added to order. Not editable.
    string vat_code_id = 29;

    // The applicable discount basis, which could have either been automatically applied or could be a specific (override) from the user, as determined by IsDiscountAutomatic
    bmapi.common.EnumDiscountBasis discount_basis = 30;
    double discount_level = 31;
    bool is_discount_automatic = 32;

    // Pricing Category. Used for evaluating and reevaluating price/discounts. Captured from product when line is added to order. Not editable
    google.protobuf.StringValue pricing_category_id = 34;
    OrderLineReadOnlyProto read_only = 35;
}
message OrderHeaderReadOnlyProto {

    // Reason Order Cancelled. Expected to be provided at time of cancelling an order.
    string cancellation_reason = 1;

    // User who cancelled the order. Captured by system not user editable. (Null if not cancelled).
    google.protobuf.StringValue cancelled_by_user_id = 3;

    // Timestamp at which the order was cancelled. Captured by system not user editable. (Null if not cancelled).
    google.protobuf.Timestamp cancelled_at = 5;

    // Timestamp at which the order was created on the system. Captured by system not user editable.
    google.protobuf.Timestamp created_at = 6;

    // User who initially created the order. Captured by system not user editable.
    string created_by_user_id = 7;

    // Description of the current error which is preventing this credit from being posted to accounts. Ie the error (if any) which occurred  when this was last attempted to post. The presence of text in this field implies there is a known current error so posting will not be reattempted. To reattempt posting this field must be cleared.
    string current_posting_error = 8;

    // Latitude of delviery address (if known). Used for distribution planning, routing, mapping. Copies from Outlet by default. Not directly editable by user, but updated automatically when order delivery address changed.
    google.protobuf.DoubleValue delivery_latitude = 10;

    // Longitude of delviery address (if known). Used for distribution planning, routing, mapping. Copies from Outlet by default. Not directly editable by user, but updated automatically when order delivery address changed.
    google.protobuf.DoubleValue delivery_longitude = 12;

    // Reference of Order in External system. (OrderSource identifies which system the order was imported from eg WooCommerce / Shopify). Not editable.
    string external_reference = 13;

    // Group (if any). Affects Discounts. Used for accounts posting (invoices post to the group not outlet unless group is marked as SendInvoicesToOutlet). Captured from outlet at order creation. Not editable.
    google.protobuf.StringValue group_id = 15;

    // Set to true when stock is adjusted for this order (occurs once posting to accounts succeeds). When true it implies that the items on the order should not be modified.
    bool has_stock_been_adjusted = 16;

    // Identified the order as a Retail Order. Retail orders are not sent to accounts individually, but instead are packaged (typically daily) into a single summary which is sent to accounts. Retail orders present differently to Trade on UI. Captured from outlet at order creation. Not editable.
    bool is_retail_order = 17;

    // Invoice Number. Assigned on accounts posting or invoice document generation. InvoiceNumber is the key for sending the invoice to accounts packages. Not user editable. 
    string invoice_number = 18;

    // Timestamp at which the order was last updated on the system. Captured by system not user editable.
    google.protobuf.Timestamp last_updated_at = 19;

    // Order Number. Assigned at order creation. Not editable.
    string order_number = 20;

    // Order Source. Assigned at order creation. Not editable. : 0 = None, 1 = BrewMan, 2 = WooCommerce, 3 = Shopify, 4 = Sellar
    bmapi.common.EnumOrderSource order_source = 21;

    // Outlet which the order is for. Shown on docs. Used to determine which contact in accounts the order is sent to (if not invoiced to group). Outlet is required at order create and then Not editable.
    string outlet_id = 22;

    // Processing Status Of the order. Not directly editable, but updated as explicit state change operations (complete/cancel/archive) are invoked. Orders are created with Status Open. : 0 = None, 1 = Open, 2 = Complete, 3 = Historic, 4 = Cancelled, 5 = Posting
    bmapi.common.EnumOrderStatus status = 23;

    // Total Cost Price of Order. (Inc Duty as applicable, Ex VAT). Essentially a cached value of the sum of NetCost of lines. Updated when lines changed. Not editable.
    double total_cost_net = 24;

    // Total Net Price of Order. Essentially a cached value of the sum of NetPrice of lines. Updated when lines changed. Not editable.
    double total_net_price = 25;

    // Total VAT of Order. Essentially a cached value of the sum of Vat of lines. Updated when lines changed. Not editable.
    double total_vat = 26;

    // The approximate amount of duty which has/will be paid in fulfilling this order. This represents the amount of duty included in the total net price, regardless of whether that duty would be chargeable directly due to this specific sale. For example, if the sale is from non-bonded then the duty has already been paid as part of the stock transfer to non-bonded so this sale will not cause a direct duty liability but that duty element will be included in the duty cost of sale. It is approximate because actual duty return calculations will be rounded across multiple orders so cannot be exactly attributed to each individual order. 
    double total_approximate_duty_cost_of_sale = 27;
}
message OrderLineReadOnlyProto {

    // The approximate amount of duty which has/will be paid in fulfilling this order line. This represents the amount of duty included in the line net price, regardless of whether that duty would be chargeable directly due to this specific sale. For example, if the sale is from non-bonded then the duty has already been paid as part of the stock transfer to non-bonded so this sale will not cause a direct duty liability but that duty element will be included in the duty cost of sale. It is approximate because actual duty return calculations will be rounded across multiple orders so cannot be exactly attributed to each individual order. 
    double approximate_duty_cost_of_sale = 1;
}

// ArrayValue messages for ArrayQs of Domain Message Types


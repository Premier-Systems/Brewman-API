// source: glcode.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_type_timeofday_pb = require('./google/type/timeofday_pb.js');
goog.object.extend(proto, google_type_timeofday_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_type_date_pb = require('./google/type/date_pb.js');
goog.object.extend(proto, google_type_date_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var common_arrayvalues_pb = require('./common/arrayvalues_pb.js');
goog.object.extend(proto, common_arrayvalues_pb);
var common_enums_generated_pb = require('./common/enums.generated_pb.js');
goog.object.extend(proto, common_enums_generated_pb);
var common_enumarrayvalues_generated_pb = require('./common/enumarrayvalues.generated_pb.js');
goog.object.extend(proto, common_enumarrayvalues_generated_pb);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetGlCodeRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetGlCodeResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetGlCodesRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GetGlCodesResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GlCodeOverrideProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.glcode.GlCodeProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.displayName = 'proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.displayName = 'proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetGlCodeRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetGlCodeRequestProto.displayName = 'proto.bmapi.stocks.glcode.GetGlCodeRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetGlCodeResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetGlCodeResponseProto.displayName = 'proto.bmapi.stocks.glcode.GetGlCodeResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.glcode.GetGlCodesRequestProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetGlCodesRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetGlCodesRequestProto.displayName = 'proto.bmapi.stocks.glcode.GetGlCodesRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.glcode.GetGlCodesResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetGlCodesResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetGlCodesResponseProto.displayName = 'proto.bmapi.stocks.glcode.GetGlCodesResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.displayName = 'proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.displayName = 'proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GlCodeProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GlCodeProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GlCodeProto.displayName = 'proto.bmapi.stocks.glcode.GlCodeProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.glcode.GlCodeOverrideProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.glcode.GlCodeOverrideProto.displayName = 'proto.bmapi.stocks.glcode.GlCodeOverrideProto';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto;
  return proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetAllGlCodesRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    glCodesList: jspb.Message.toObjectList(msg.getGlCodesList(),
    proto.bmapi.stocks.glcode.GlCodeProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto;
  return proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.glcode.GlCodeProto;
      reader.readMessage(value,proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinaryFromReader);
      msg.addGlCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlCodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.glcode.GlCodeProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GlCodeProto gl_codes = 1;
 * @return {!Array<!proto.bmapi.stocks.glcode.GlCodeProto>}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.getGlCodesList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.glcode.GlCodeProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.glcode.GlCodeProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.glcode.GlCodeProto>} value
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto} returns this
*/
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.setGlCodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.glcode.GlCodeProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.addGlCodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.glcode.GlCodeProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto} returns this
 */
proto.bmapi.stocks.glcode.GetAllGlCodesResponseProto.prototype.clearGlCodesList = function() {
  return this.setGlCodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetGlCodeRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    glCodeId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetGlCodeRequestProto;
  return proto.bmapi.stocks.glcode.GetGlCodeRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGlCodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetGlCodeRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGlCodeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string gl_code_id = 2;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.getGlCodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodeRequestProto.prototype.setGlCodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetGlCodeResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    glCode: (f = msg.getGlCode()) && proto.bmapi.stocks.glcode.GlCodeProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetGlCodeResponseProto;
  return proto.bmapi.stocks.glcode.GetGlCodeResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.glcode.GlCodeProto;
      reader.readMessage(value,proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinaryFromReader);
      msg.setGlCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetGlCodeResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bmapi.stocks.glcode.GlCodeProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional GlCodeProto gl_code = 1;
 * @return {?proto.bmapi.stocks.glcode.GlCodeProto}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.getGlCode = function() {
  return /** @type{?proto.bmapi.stocks.glcode.GlCodeProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.glcode.GlCodeProto, 1));
};


/**
 * @param {?proto.bmapi.stocks.glcode.GlCodeProto|undefined} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto} returns this
*/
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.setGlCode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodeResponseProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.clearGlCode = function() {
  return this.setGlCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.glcode.GetGlCodeResponseProto.prototype.hasGlCode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetGlCodesRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    glCodeIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetGlCodesRequestProto;
  return proto.bmapi.stocks.glcode.GetGlCodesRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addGlCodeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetGlCodesRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGlCodeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string gl_code_ids = 2;
 * @return {!Array<string>}
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.getGlCodeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.setGlCodeIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.addGlCodeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodesRequestProto.prototype.clearGlCodeIdsList = function() {
  return this.setGlCodeIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetGlCodesResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    glCodesList: jspb.Message.toObjectList(msg.getGlCodesList(),
    proto.bmapi.stocks.glcode.GlCodeProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetGlCodesResponseProto;
  return proto.bmapi.stocks.glcode.GetGlCodesResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.glcode.GlCodeProto;
      reader.readMessage(value,proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinaryFromReader);
      msg.addGlCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetGlCodesResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlCodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.glcode.GlCodeProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GlCodeProto gl_codes = 1;
 * @return {!Array<!proto.bmapi.stocks.glcode.GlCodeProto>}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.getGlCodesList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.glcode.GlCodeProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.glcode.GlCodeProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.glcode.GlCodeProto>} value
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto} returns this
*/
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.setGlCodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.glcode.GlCodeProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto}
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.addGlCodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.glcode.GlCodeProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.glcode.GetGlCodesResponseProto} returns this
 */
proto.bmapi.stocks.glcode.GetGlCodesResponseProto.prototype.clearGlCodesList = function() {
  return this.setGlCodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto;
  return proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto} returns this
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    glCodeOverridesList: jspb.Message.toObjectList(msg.getGlCodeOverridesList(),
    proto.bmapi.stocks.glcode.GlCodeOverrideProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto;
  return proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.glcode.GlCodeOverrideProto;
      reader.readMessage(value,proto.bmapi.stocks.glcode.GlCodeOverrideProto.deserializeBinaryFromReader);
      msg.addGlCodeOverrides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlCodeOverridesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.glcode.GlCodeOverrideProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GlCodeOverrideProto gl_code_overrides = 1;
 * @return {!Array<!proto.bmapi.stocks.glcode.GlCodeOverrideProto>}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.getGlCodeOverridesList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.glcode.GlCodeOverrideProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.glcode.GlCodeOverrideProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.glcode.GlCodeOverrideProto>} value
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto} returns this
*/
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.setGlCodeOverridesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.glcode.GlCodeOverrideProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto}
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.addGlCodeOverrides = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.glcode.GlCodeOverrideProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto} returns this
 */
proto.bmapi.stocks.glcode.GetAllGlCodeOverridesResponseProto.prototype.clearGlCodeOverridesList = function() {
  return this.setGlCodeOverridesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GlCodeProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GlCodeProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GlCodeProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 7, 0),
    id: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, ""),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isHidden: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto}
 */
proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GlCodeProto;
  return proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GlCodeProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto}
 */
proto.bmapi.stocks.glcode.GlCodeProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHidden(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GlCodeProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GlCodeProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GlCodeProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsHidden();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional int64 version = 7;
 * @return {number}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string code = 9;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool is_hidden = 11;
 * @return {boolean}
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.getIsHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeProto.prototype.setIsHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.glcode.GlCodeOverrideProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockItemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    outletTypeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    glCodeId: (f = msg.getGlCodeId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.glcode.GlCodeOverrideProto;
  return proto.bmapi.stocks.glcode.GlCodeOverrideProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStockItemId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutletTypeId(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setGlCodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.glcode.GlCodeOverrideProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOutletTypeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGlCodeId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stock_item_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.getStockItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.setStockItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string outlet_type_id = 2;
 * @return {string}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.getOutletTypeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.setOutletTypeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.StringValue gl_code_id = 4;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.getGlCodeId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 4));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} returns this
*/
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.setGlCodeId = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.glcode.GlCodeOverrideProto} returns this
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.clearGlCodeId = function() {
  return this.setGlCodeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.glcode.GlCodeOverrideProto.prototype.hasGlCodeId = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.bmapi.stocks.glcode);

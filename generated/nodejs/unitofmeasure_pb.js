// source: unitofmeasure.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_type_timeofday_pb = require('./google/type/timeofday_pb.js');
goog.object.extend(proto, google_type_timeofday_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_type_date_pb = require('./google/type/date_pb.js');
goog.object.extend(proto, google_type_date_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var common_arrayvalues_pb = require('./common/arrayvalues_pb.js');
goog.object.extend(proto, common_arrayvalues_pb);
var common_enums_generated_pb = require('./common/enums.generated_pb.js');
goog.object.extend(proto, common_enums_generated_pb);
var common_enumarrayvalues_generated_pb = require('./common/enumarrayvalues.generated_pb.js');
goog.object.extend(proto, common_enumarrayvalues_generated_pb);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.displayName = 'proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.displayName = 'proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.displayName = 'proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.displayName = 'proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.displayName = 'proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.displayName = 'proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.displayName = 'proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto;
  return proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitsOfMeasureList: jspb.Message.toObjectList(msg.getUnitsOfMeasureList(),
    proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto;
  return proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto;
      reader.readMessage(value,proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader);
      msg.addUnitsOfMeasure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnitsOfMeasureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnitOfMeasureProto units_of_measure = 1;
 * @return {!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.getUnitsOfMeasureList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.setUnitsOfMeasureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.addUnitsOfMeasure = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetAllUnitsOfMeasureResponseProto.prototype.clearUnitsOfMeasureList = function() {
  return this.setUnitsOfMeasureList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitOfMeasureId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto;
  return proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitOfMeasureId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitOfMeasureId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unit_of_measure_id = 2;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.getUnitOfMeasureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureRequestProto.prototype.setUnitOfMeasureId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitOfMeasure: (f = msg.getUnitOfMeasure()) && proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto;
  return proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto;
      reader.readMessage(value,proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader);
      msg.setUnitOfMeasure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnitOfMeasure();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional UnitOfMeasureProto unit_of_measure = 1;
 * @return {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.getUnitOfMeasure = function() {
  return /** @type{?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, 1));
};


/**
 * @param {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto|undefined} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.setUnitOfMeasure = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.clearUnitOfMeasure = function() {
  return this.setUnitOfMeasure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitOfMeasureResponseProto.prototype.hasUnitOfMeasure = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitOfMeasureIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto;
  return proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUnitOfMeasureIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitOfMeasureIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string unit_of_measure_ids = 2;
 * @return {!Array<string>}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.getUnitOfMeasureIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.setUnitOfMeasureIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.addUnitOfMeasureIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureRequestProto.prototype.clearUnitOfMeasureIdsList = function() {
  return this.setUnitOfMeasureIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitsOfMeasureList: jspb.Message.toObjectList(msg.getUnitsOfMeasureList(),
    proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto;
  return proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto;
      reader.readMessage(value,proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader);
      msg.addUnitsOfMeasure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnitsOfMeasureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnitOfMeasureProto units_of_measure = 1;
 * @return {!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.getUnitsOfMeasureList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto>} value
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.setUnitsOfMeasureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.addUnitsOfMeasure = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.GetUnitsOfMeasureResponseProto.prototype.clearUnitsOfMeasureList = function() {
  return this.setUnitsOfMeasureList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitOfMeasure: (f = msg.getUnitOfMeasure()) && proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto;
  return proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto;
      reader.readMessage(value,proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader);
      msg.setUnitOfMeasure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitOfMeasure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UnitOfMeasureProto unit_of_measure = 2;
 * @return {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.getUnitOfMeasure = function() {
  return /** @type{?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto, 2));
};


/**
 * @param {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto|undefined} value
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.setUnitOfMeasure = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.clearUnitOfMeasure = function() {
  return this.setUnitOfMeasure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureRequestProto.prototype.hasUnitOfMeasure = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto;
  return proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SaveUnitOfMeasureResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitOfMeasureId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hide: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto;
  return proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitOfMeasureId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHide(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitOfMeasureId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHide();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unit_of_measure_id = 2;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.getUnitOfMeasureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.setUnitOfMeasureId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool hide = 3;
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.getHide = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenRequestProto.prototype.setHide = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto;
  return proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.SetUnitOfMeasureIsHiddenResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 7, 0),
    id: jspb.Message.getFieldWithDefault(msg, 8, ""),
    litres: (f = msg.getLitres()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 11, ""),
    readOnly: (f = msg.getReadOnly()) && proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.toObject(includeInstance, f),
    isHidden: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto;
  return proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setLitres(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 12:
      var value = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto;
      reader.readMessage(value,proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.deserializeBinaryFromReader);
      msg.setReadOnly(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHidden(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLitres();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getReadOnly();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.serializeBinaryToWriter
    );
  }
  f = message.getIsHidden();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional int64 version = 7;
 * @return {number}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.DoubleValue litres = 10;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getLitres = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 10));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setLitres = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.clearLitres = function() {
  return this.setLitres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.hasLitres = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string name = 11;
 * @return {string}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional UnitOfMeasureReadOnlyProto read_only = 12;
 * @return {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getReadOnly = function() {
  return /** @type{?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto, 12));
};


/**
 * @param {?proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto|undefined} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
*/
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setReadOnly = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.clearReadOnly = function() {
  return this.setReadOnly(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.hasReadOnly = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool is_hidden = 13;
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.getIsHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureProto.prototype.setIsHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    isUnits: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto;
  return proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUnits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsUnits();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_units = 1;
 * @return {boolean}
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.prototype.getIsUnits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto} returns this
 */
proto.bmapi.stocks.unitofmeasure.UnitOfMeasureReadOnlyProto.prototype.setIsUnits = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.bmapi.stocks.unitofmeasure);

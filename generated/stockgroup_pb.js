// source: stockgroup.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_type_timeofday_pb = require('./google/type/timeofday_pb.js');
goog.object.extend(proto, google_type_timeofday_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_type_date_pb = require('./google/type/date_pb.js');
goog.object.extend(proto, google_type_date_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var common_arrayvalues_pb = require('./common/arrayvalues_pb.js');
goog.object.extend(proto, common_arrayvalues_pb);
var common_enums_generated_pb = require('./common/enums.generated_pb.js');
goog.object.extend(proto, common_enums_generated_pb);
var common_enumarrayvalues_generated_pb = require('./common/enumarrayvalues.generated_pb.js');
goog.object.extend(proto, common_enumarrayvalues_generated_pb);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto', null, global);
goog.exportSymbol('proto.bmapi.stocks.stockgroup.StockGroupProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.displayName = 'proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.displayName = 'proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.displayName = 'proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.displayName = 'proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.displayName = 'proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.displayName = 'proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.displayName = 'proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.repeatedFields_, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.displayName = 'proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmapi.stocks.stockgroup.StockGroupProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmapi.stocks.stockgroup.StockGroupProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmapi.stocks.stockgroup.StockGroupProto.displayName = 'proto.bmapi.stocks.stockgroup.StockGroupProto';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto;
  return proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockGroupsList: jspb.Message.toObjectList(msg.getStockGroupsList(),
    proto.bmapi.stocks.stockgroup.StockGroupProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto;
  return proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.stockgroup.StockGroupProto;
      reader.readMessage(value,proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader);
      msg.addStockGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StockGroupProto stock_groups = 1;
 * @return {!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.getStockGroupsList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.stockgroup.StockGroupProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>} value
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto} returns this
*/
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.setStockGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.stockgroup.StockGroupProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.addStockGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.stockgroup.StockGroupProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetAllStockGroupsResponseProto.prototype.clearStockGroupsList = function() {
  return this.setStockGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stockGroupId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto;
  return proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStockGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStockGroupId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string stock_group_id = 2;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.getStockGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupRequestProto.prototype.setStockGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockGroup: (f = msg.getStockGroup()) && proto.bmapi.stocks.stockgroup.StockGroupProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto;
  return proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.stockgroup.StockGroupProto;
      reader.readMessage(value,proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader);
      msg.setStockGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional StockGroupProto stock_group = 1;
 * @return {?proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.getStockGroup = function() {
  return /** @type{?proto.bmapi.stocks.stockgroup.StockGroupProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.stockgroup.StockGroupProto, 1));
};


/**
 * @param {?proto.bmapi.stocks.stockgroup.StockGroupProto|undefined} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto} returns this
*/
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.setStockGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.clearStockGroup = function() {
  return this.setStockGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupResponseProto.prototype.hasStockGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stockGroup: (f = msg.getStockGroup()) && proto.bmapi.stocks.stockgroup.StockGroupProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto;
  return proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = new proto.bmapi.stocks.stockgroup.StockGroupProto;
      reader.readMessage(value,proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader);
      msg.setStockGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStockGroup();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StockGroupProto stock_group = 2;
 * @return {?proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.getStockGroup = function() {
  return /** @type{?proto.bmapi.stocks.stockgroup.StockGroupProto} */ (
    jspb.Message.getWrapperField(this, proto.bmapi.stocks.stockgroup.StockGroupProto, 2));
};


/**
 * @param {?proto.bmapi.stocks.stockgroup.StockGroupProto|undefined} value
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} returns this
*/
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.setStockGroup = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.clearStockGroup = function() {
  return this.setStockGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupRequestProto.prototype.hasStockGroup = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto;
  return proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.SaveStockGroupResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stockGroupIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto;
  return proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addStockGroupIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStockGroupIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string tenant_id = 1;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.getTenantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.setTenantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string stock_group_ids = 2;
 * @return {!Array<string>}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.getStockGroupIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.setStockGroupIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.addStockGroupIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdRequestProto.prototype.clearStockGroupIdsList = function() {
  return this.setStockGroupIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    stockGroupsList: jspb.Message.toObjectList(msg.getStockGroupsList(),
    proto.bmapi.stocks.stockgroup.StockGroupProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto;
  return proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bmapi.stocks.stockgroup.StockGroupProto;
      reader.readMessage(value,proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader);
      msg.addStockGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStockGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StockGroupProto stock_groups = 1;
 * @return {!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.getStockGroupsList = function() {
  return /** @type{!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bmapi.stocks.stockgroup.StockGroupProto, 1));
};


/**
 * @param {!Array<!proto.bmapi.stocks.stockgroup.StockGroupProto>} value
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto} returns this
*/
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.setStockGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bmapi.stocks.stockgroup.StockGroupProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.addStockGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bmapi.stocks.stockgroup.StockGroupProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto} returns this
 */
proto.bmapi.stocks.stockgroup.GetStockGroupsByIdResponseProto.prototype.clearStockGroupsList = function() {
  return this.setStockGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.toObject = function(opt_includeInstance) {
  return proto.bmapi.stocks.stockgroup.StockGroupProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmapi.stocks.stockgroup.StockGroupProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 7, 0),
    id: jspb.Message.getFieldWithDefault(msg, 8, ""),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    restrictedStock: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isHidden: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmapi.stocks.stockgroup.StockGroupProto;
  return proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmapi.stocks.stockgroup.StockGroupProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRestrictedStock(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHidden(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmapi.stocks.stockgroup.StockGroupProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRestrictedStock();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsHidden();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional int64 version = 7;
 * @return {number}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto} returns this
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto} returns this
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto} returns this
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool restricted_stock = 10;
 * @return {boolean}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.getRestrictedStock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto} returns this
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.setRestrictedStock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_hidden = 11;
 * @return {boolean}
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.getIsHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bmapi.stocks.stockgroup.StockGroupProto} returns this
 */
proto.bmapi.stocks.stockgroup.StockGroupProto.prototype.setIsHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


goog.object.extend(exports, proto.bmapi.stocks.stockgroup);
